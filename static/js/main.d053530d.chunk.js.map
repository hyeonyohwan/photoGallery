{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Footer.js","App.js","index.js"],"names":["Title","className","icon","faCamera","firebaseConfig","apiKey","process","REACT_APP_REACT_APP_FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","motion","div","key","layout","whileHover","opacity","s","onClick","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","classList","contains","y","Footer","props","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d053530d.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Since 2018.</h1>\n      <h2>\n        <p className=\"mainText\">Photos</p>\n        <FontAwesomeIcon icon={faCamera} className=\"camera\" />\n      </h2>\n    </div>\n  );\n};\n\nexport default Title;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };\n","import { useState, useEffect } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // 스토리지에 파일을 업로드하는 기능\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n\n    storageRef.put(file).on(\n      // 사진 업로드 로딩 퍼센티지\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\n\nconst ProgressBar = ({ file, setFile }) => {\n  // 업로드 진행상태를 표시하기 위한 progress bar\n  const { url, progress } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return <div className=\"progress-bar\" style={{ width: progress + \"%\" }}></div>;\n};\n\nexport default ProgressBar;\n","import React, { useState } from \"react\";\nimport ProgressBar from \"../comps/ProgressBar\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file (png or jpeg)\");\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={changeHandler} />\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useState, useEffect } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    // 파이어스토어에 문서를 아이디와 함께 내림차순으로 업데이트하는 기능\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        // onSnapshot() 메소드로 문서를 수신 대기할 수 있습니다. 사용자가 제공하는 콜백이 최초로 호출될 때 단일 문서의 현재 콘텐츠로 문서 스냅샷이 즉시 생성됩니다. 그런 다음 콘텐츠가 변경될 때마다 콜백이 호출되어 문서 스냅샷을 업데이트합니다.\n\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n","import React from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore(\"images\");\n\n  return (\n    <div className=\"img-grid\">\n      {docs &&\n        docs.map((doc) => (\n          <motion.div\n            className=\"img-wrap\"\n            key={doc.id}\n            layout\n            whileHover={{ opacity: 1 }}\n            s\n            onClick={() => setSelectedImg(doc.url)}\n          >\n            <motion.img\n              src={doc.url}\n              alt=\"uploaded pic\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n  // 사진을 눌렀을 때 스르륵 나오는 모션과 배경이 어두워지는 모셥\n  const handleClick = (e) => {\n    if (e.target.classList.contains(\"backdrop\")) {\n      setSelectedImg(null);\n    }\n  };\n\n  return (\n    <motion.div\n      className=\"backdrop\"\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"enlarged pic\" animate={{ y: 0 }} />\n    </motion.div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nconst Footer = (props) => (\n  <div className=\"footer\">\n    <p className=\"footerText\">\n      Copyright 2021. HyeonYohwan All pictures cannot be copied without\n      permission.\n    </p>\n  </div>\n);\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\nimport Footer from \"./comps/Footer\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <div className=\"hr\">\n        <hr className=\"seperateLine\" />\n      </div>\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}